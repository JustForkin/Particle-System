#pragma once

class Vector {

public:

	double x, y, z;

	///////////////////////////////////////////////////////////////////
	//
	//
	///////////////////////////////////////////////////////////////////
	Vector();

	///////////////////////////////////////////////////////////////////
	//
	//
	///////////////////////////////////////////////////////////////////
	Vector(Vector& v);

	///////////////////////////////////////////////////////////////////
	//
	//
	///////////////////////////////////////////////////////////////////
	Vector(double x, double y, double z);

	///////////////////////////////////////////////////////////////////
	//
	//
	///////////////////////////////////////////////////////////////////
	double getX();
	double getY();
	double getZ();

	///////////////////////////////////////////////////////////////////
	//
	//
	///////////////////////////////////////////////////////////////////
	void set(double x, double y, double z);

	///////////////////////////////////////////////////////////////////
	//
	//
	///////////////////////////////////////////////////////////////////
	void set(Vector& v);

	///////////////////////////////////////////////////////////////////
	//
	//
	///////////////////////////////////////////////////////////////////
	double magnitude() const;

	///////////////////////////////////////////////////////////////////
	//
	//
	///////////////////////////////////////////////////////////////////
	Vector asUnitVector() const;

	///////////////////////////////////////////////////////////////////
	//
	//
	///////////////////////////////////////////////////////////////////
	Vector scaled(double scaleFactor);

	///////////////////////////////////////////////////////////////////
	//
	//
	///////////////////////////////////////////////////////////////////
	void multiply(double scaleFactor);

	///////////////////////////////////////////////////////////////////
	//
	//
	///////////////////////////////////////////////////////////////////
	void add(const Vector& v);

	///////////////////////////////////////////////////////////////////
	//
	//
	///////////////////////////////////////////////////////////////////
	Vector vectorTo(const Vector& v);

	///////////////////////////////////////////////////////////////////
	//
	//
	///////////////////////////////////////////////////////////////////
	bool withinSphere (const Vector& center, double radius);

	///////////////////////////////////////////////////////////////////
	//
	//
	///////////////////////////////////////////////////////////////////
	Vector copy();

	///////////////////////////////////////////////////////////////////
	//
	//
	///////////////////////////////////////////////////////////////////
	static Vector fromArray(double* data);
};